<Window x:Class="PairMatch.Views.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:pairMatch="clr-namespace:PairMatch"
        xmlns:viewModels="clr-namespace:PairMatch.ViewModels"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Icon="/Resources/icon.ico" Title="Pair Match"
        Width="400" Height="470" ResizeMode="CanMinimize"
        Background="#72AECD" Foreground="White">
    
    <Window.Resources>

        <!-- The code used for the card flip animation was written by Ian Griffiths on:
        http://www.interact-sw.co.uk/iangblog/2007/05/17/wpf-flippable-3D-list
        
        For more of his works, please visit his blog: http://www.interact-sw.co.uk/iangblog/ -->

        <DataTemplate x:Key="CardFrontTemplate" DataType="viewModels:CardViewModel">
            <Image Source="{Binding FrontImage}" Margin="5,5,5,5" />
        </DataTemplate>
        
        <DataTemplate x:Key="CardBackTemplate" DataType="viewModels:CardViewModel">
            <Image Source="{Binding BackImage}" Margin="5,5,5,5"/>
        </DataTemplate>
        
        <DataTemplate x:Key="FlipItemTemplate">

            <!-- Note: Camera setup only works when this is square. -->
            <Grid Width="100" Height="100">

                <!-- Provides 3D rotation transition. Hidden except for when animation is active. -->
                <Viewport3D Grid.Column="0" x:Name="ViewPort3D" Visibility="Hidden">
                    <Viewport3D.Camera>
                        <PerspectiveCamera x:Name="Camera" Position="0,0,0.5" LookDirection="0,0,-1" FieldOfView="90" />
                    </Viewport3D.Camera>

                    <Viewport3D.Children>

                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <Model3DGroup>
                                    <DirectionalLight Color="#444" Direction="0,0,-1" />
                                    <AmbientLight Color="#BBB" />
                                </Model3DGroup>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                        <ModelVisual3D>
                            <ModelVisual3D.Content>
                                <GeometryModel3D>


                                    <!-- Simple flat, square surface -->
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D
                                            TriangleIndices="0,1,2 2,3,0"
                                            TextureCoordinates="0,1 1,1 1,0 0,0"
                                            Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 -0.5,0.5,0" />
                                    </GeometryModel3D.Geometry>


                                    <!-- Front of shape shows the content of 'FrontHost' -->
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial>
                                            <DiffuseMaterial.Brush>
                                                <VisualBrush Visual="{Binding ElementName=FrontHost}" />
                                            </DiffuseMaterial.Brush>
                                        </DiffuseMaterial>
                                    </GeometryModel3D.Material>


                                    <!-- Back of shape shows the content of 'BackHost' -->
                                    <GeometryModel3D.BackMaterial>
                                        <DiffuseMaterial>
                                            <DiffuseMaterial.Brush>
                                                <VisualBrush Visual="{Binding ElementName=BackHost}">
                                                    <VisualBrush.RelativeTransform>
                                                        <!-- By default, this would come out backwards because we're on the
                                                        back on the shape. Flip it to make it right. -->
                                                        <ScaleTransform ScaleX="-1" CenterX="0.5" />
                                                    </VisualBrush.RelativeTransform>
                                                </VisualBrush>
                                            </DiffuseMaterial.Brush>
                                        </DiffuseMaterial>
                                    </GeometryModel3D.BackMaterial>

                                    <!-- Rotation transform used for transition. -->
                                    <GeometryModel3D.Transform>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D x:Name="Rotate" Axis="0,3,0" Angle="0" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </GeometryModel3D.Transform>
                                </GeometryModel3D>
                            </ModelVisual3D.Content>
                        </ModelVisual3D>
                    </Viewport3D.Children>

                </Viewport3D>

                <!-- We use a pair of nested Borders to wrap the content that's going to go on
                each side of the rotating model.
                as we transition from front to back, but we need to make sure the VisualBrush
                in the 3D model doesn't also get faded out. So the VisualBrush uses the inner
                Border, while the fade is applied to the outer one. -->
                <Border x:Name="FrontWrapper">
                    <!-- Note, it's important that this element has visuals that completely fill the space, as
                    otherwise it messes with the VisualBrush's size in the 3D model. Setting the background
                    has that effect, even a transparent one. -->
                    <Border x:Name="FrontHost" Background="Transparent">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Grid.MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Make the Viewport3D visible only for the duration of the rotation. -->
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ViewPort3D"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <!-- Make the background element visible. (It won't actually appear until it is
                                        faded in right at the end of the animation.) -->
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="BackWrapper"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>


                                        <!-- Hide the foreground element. It will already be invisible by this time
                                        because we fade it out right at the start of the animation. However, until
                                        we set its Visibility to Hidden, it will still be visible to the mouse... -->
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FrontWrapper"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>


                                        <!-- Fade the front wrapper out. The Viewport3D is behind us, so it'll fade into
                                        view at this point. The reason for fading is to avoid a visible step as we
                                        switch from the real UI to the copy projected onto the 3D model. -->
                                        <DoubleAnimation To="0" Duration="0:0:0.05"
                                                         Storyboard.TargetName="FrontWrapper"
                                                         Storyboard.TargetProperty="Opacity" />

                                        <!-- Fade the back wrapper in. Once the spin completes, we fade the real back UI
                                        in over the Viewport3D - using a fade to avoid a sudden jolt between the
                                        slightly fuzzy 3D look and the real UI. -->
                                        <DoubleAnimation BeginTime="0:0:1.05" Duration="0:0:0.05" To="1"
                                                         Storyboard.TargetName="BackWrapper"
                                                         Storyboard.TargetProperty="Opacity" />

                                        <!-- 3D animation. Move the Camera out slightly as we spin, so the model fits entirely
                                        within the field of view. Rotate the model 180 degrees. -->
                                        <Point3DAnimation To="0,0,1.1" From="0,0,0.5"
                                                          BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.3"
                                                          Storyboard.TargetName="Camera"
                                                          Storyboard.TargetProperty="(PerspectiveCamera.Position)" />
                                        <DoubleAnimation From="0" To="180" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                                         BeginTime="0:0:0.05" Duration="0:0:1"
                                                         Storyboard.TargetName="Rotate"
                                                         Storyboard.TargetProperty="Angle" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource CardBackTemplate}" />
                    </Border>
                </Border>
                
                <Border x:Name="BackWrapper" Grid.Column="0"  Visibility="Hidden" Opacity="0">
                    <Border x:Name="BackHost" Background="Transparent">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Grid.MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ViewPort3D"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="FrontWrapper"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="BackWrapper"
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation To="0" Duration="0:0:0.05"
                                                         Storyboard.TargetName="BackWrapper"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation BeginTime="0:0:1.05" Duration="0:0:0.05"
                                                         Storyboard.TargetName="FrontWrapper"
                                                         Storyboard.TargetProperty="Opacity" />

                                        <Point3DAnimation To="0,0,1.1" From="0,0,0.5"
                                                          BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.3"
                                                          Storyboard.TargetName="Camera"
                                                          Storyboard.TargetProperty="(PerspectiveCamera.Position)" />
                                        <DoubleAnimation From="180" To="360" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                                         BeginTime="0:0:0.05" Duration="0:0:1"
                                                         Storyboard.TargetName="Rotate"
                                                         Storyboard.TargetProperty="Angle" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource CardFrontTemplate}" />
                    </Border>
                </Border>

            </Grid>
        </DataTemplate>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed"/>
        <CommandBinding Command="pairMatch:CustomCommands.Statistics" Executed="StatisticsCommand_Executed"/>
        <CommandBinding Command="pairMatch:CustomCommands.Exit" Executed="ExitCommand_Executed"/>
    </Window.CommandBindings>

    <Grid>

        <Menu Width="380" Height="25"
              HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5,0,0"
              Background="#6498B3">
            <MenuItem Header="_File"
                      Width="40" Height="25"
                      Foreground="White">
                <MenuItem Header="_New Game" Height="20" Foreground="#6498B3" Command="ApplicationCommands.New"/>
                <MenuItem Header="_Statistics" Height="20" Foreground="#6498B3" Command="pairMatch:CustomCommands.Statistics"/>
                <Separator/>
                <MenuItem Header="_Exit" Height="20" Foreground="#6498B3" Command="pairMatch:CustomCommands.Exit"/>
            </MenuItem>
            <MenuItem Header="_Options"
                      Width="65" Height="25"
                      Foreground="White">
                <MenuItem Name="StandardGameMenuItem" Header="_Standard"
                          Height="22" Foreground="#6498B3"
                          IsCheckable="True"
                          IsChecked="{Binding StandardGame, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Checked="OptionsMenuItem_Checked" Unchecked="OptionsMenuItem_Unchecked"
                          StaysOpenOnClick="True"/>
                <MenuItem Name="CustomGameMenuItem"
                          Height="44" Foreground="#6498B3"
                          IsCheckable="True"
                          IsChecked="{Binding CustomGame, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Checked="OptionsMenuItem_Checked" Unchecked="OptionsMenuItem_Unchecked"
                          StaysOpenOnClick="True">
                    <MenuItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Custom:" Margin="0,0,-10,0"
                                       Grid.Row="0"/>
                            
                            <TextBox Name="RowCountTextBox"
                                     Width="30" Margin="20,0,-40,0"
                                     HorizontalContentAlignment="Center"
                                     Foreground="Gray"
                                     Grid.Row="0" Grid.Column="1">

                                <TextBox.Text>
                                    <Binding Path="(viewModels:GameViewModel.CustomRowCount)" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <viewModels:GeneratedCardsCountValidationRule ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            
                            <TextBlock Text="rows" Margin="45,0,-45,0"
                                       Grid.Row="0" Grid.Column="2"/>

                            <TextBox Name="ColumnCountTextBox"
                                     Width="30" Margin="20,3,-40,-3"
                                     HorizontalContentAlignment="Center"
                                     Foreground="Gray"
                                     Grid.Row="1" Grid.Column="1">

                                <TextBox.Text>
                                    <Binding Path="(viewModels:GameViewModel.CustomColumnCount)" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <viewModels:GeneratedCardsCountValidationRule ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            
                            <TextBlock Text="cols" Margin="45,3,-45,-3"
                                       Grid.Row="1" Grid.Column="2"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>
                <MenuItem Width="150" Height="20" Foreground="#6498B3">
                    <MenuItem.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Timer:" Margin="0,0,-10,0"/>
                            <TextBox Name="TimerTextBox"
                                     Text="{Binding Timer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Width="40" Margin="20,0,-40,0"
                                     HorizontalContentAlignment="Center"
                                     Foreground="Gray"
                                     Grid.Column="1"/>
                            <TextBlock Text="min" Margin="45,0,-45,0" Grid.Column="2"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help"
                      Width="40" Height="25"
                      Foreground="White">
                <MenuItem Header="_About" Height="20" Foreground="#6498B3" Click="AboutMenuItem_Click"/>
            </MenuItem>
        </Menu>

        <Grid Name="GameGrid" Margin="20,40,20,20">

            <Label Name="LevelLabel" Content="{Binding GameLevelString, Mode=OneWay}"
                   Width="60" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Foreground="White"
                   FontWeight="Bold"
                   Visibility="Hidden"/>

            <Label Name="TimeLeftLabel" Content="Time left:"
                   Width="80" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,0,0,0"
                   HorizontalContentAlignment="Right"
                   Foreground="White"
                   FontWeight="Bold"
                   Visibility="Hidden"/>

            <Label Name="TimerLabel" Content="{Binding TimeLeftString, Mode=OneWay}"
                   Width="60" Height="30"
                   HorizontalAlignment="Right" VerticalAlignment="Top"
                   HorizontalContentAlignment="Right"
                   Foreground="White"
                   Visibility="Hidden"/>

            <ListView Name="CardsListView"
                      Width="360" Height="340"
                      HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,30,0,0"
                      HorizontalContentAlignment="Center"
                      Background="{x:Null}" BorderBrush="{x:Null}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      Style="{x:Null}" ItemContainerStyle="{DynamicResource ListViewItemStyle}"
                      ItemTemplate="{StaticResource FlipItemTemplate}"
                      SelectionMode="Single"
                      PreviewMouseDown="CardsListView_PreviewMouseDown"
                      SelectionChanged="CardsListView_SelectionChanged"
                      Visibility="Hidden">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="{Binding RowCount, Mode=OneWay}"
                                     Columns="{Binding ColumnCount, Mode=OneWay}"
                                     HorizontalAlignment="Stretch"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <!--<ListView.ItemTemplate>
                    <DataTemplate DataType="models:Card">
                        <Image Source="{Binding FrontImage}" Width="50" Margin="5,5,5,5"/>
                    </DataTemplate>
                </ListView.ItemTemplate>-->
            </ListView>

            <Label Name="GameOverLabel"
                   Width="220" Height="50"
                   HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="#90333C"
                   FontSize="30"  FontWeight="Bold"
                   Visibility="Hidden"/>

            <Button Name="NextGameButton"
                    Width="85" Height="30"
                    HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,220,0,0"
                    Style="{StaticResource RoundedButtonStyle}"
                    Command="ApplicationCommands.New"
                    Visibility="Hidden"/>

        </Grid>

        <Grid Name="StatisticsGrid" Margin="20,40,20,20" Visibility="Hidden">

            <Label Content="Player"
                   Width="80" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Label Content="Games won"
                   Width="90" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="100,0,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Label Content="Games played"
                   Width="90" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="240,0,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Label Content="Standard"
                   Width="60" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="80,20,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Rectangle Width="1"
                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="147,30,0,0"
                       Stroke="White"/>
            
            <Label Content="Custom"
                   Width="60" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,20,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Label Content="Standard"
                   Width="60" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="220,20,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <Rectangle Width="1"
                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="287,30,0,0"
                       Stroke="White"/>

            <Label Content="Custom"
                   Width="60" Height="30"
                   HorizontalAlignment="Left" VerticalAlignment="Top" Margin="290,20,0,0"
                   HorizontalContentAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"/>

            <ScrollViewer Margin="0,50,-20,0" VerticalScrollBarVisibility="Auto">
                <ItemsControl Name="StatisticsItemsControl">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="viewModels:UserViewModel">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="80" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0"
                                       Content="{Binding Username}"
                                       Foreground="White"/>

                                <Label Grid.Column="1"
                                       Content="{Binding StandardWonGamesCount}"
                                       HorizontalContentAlignment="Center"
                                       Foreground="White"/>

                                <Label Grid.Column="2"
                                       Content="{Binding CustomWonGamesCount}"
                                       HorizontalContentAlignment="Center"
                                       Foreground="White"/>

                                <Label Grid.Column="3"
                                       Content="{Binding StandardPlayedGamesCount}"
                                       HorizontalContentAlignment="Center"
                                       Foreground="White"/>

                                <Label Grid.Column="4"
                                       Content="{Binding CustomPlayedGamesCount}"
                                       HorizontalContentAlignment="Center"
                                       Foreground="White"/>

                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

        </Grid>

    </Grid>
</Window>
